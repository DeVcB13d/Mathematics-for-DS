# -*- coding: utf-8 -*-
"""matrix calculations.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1i3_0PuOGc4nOCsOuSg7G-HhPQaLCxNUx

# **Algorithm for row reduction**
"""

def rowredn(grid):
  matrix = grid 
  n = len(matrix) #Number of rows in the matrix
  for i in range(1,n+1): #The initial row
    i1 = matrix[i-1] #ith row
    for j in range(i+1,n+1):#Rows below the initial row
      j1 = matrix[j-1] #jth row
      try:
        factor = j1[i-1] / i1[i-1]
      except:
        factor = 0

      for k in range(1,n+1): #access the column elements
        j1[k-1] -= factor * i1[k-1]
  return matrix

def display(grid):
  for i in grid :
    for j in i:
      ff = float(j)
      print(ff , end = "   ")
    print()

def det(grid):
  k = rowredn(grid)
  c = 0
  det = 1
  for i in k:
    det *= i[c]
    c = c + 1
  return det

l = [[3,3,3],[1,1,9],[5,4,6]]
k = rowredn(l)
d = det(k)
display(k)
print("Determinant is = " , d)